git-blame(1)
============

NAME
----
git-blame - Show what revision and author last modified each line of a file

SYNOPSIS
--------
'git-blame' [-c] [-l] [-t] [-S <revs-file>] [--] <file> [<rev>]

DESCRIPTION
-----------

Annotates each line in the given file with information from the revision which
last modified the line. Optionally, start annotating from the given revision.

This report doesn't tell you anything about lines which have been deleted or
replaced; you need to use a tool such as gitlink:git-diff[1] or the "pickaxe"
interface briefly mentioned in the following paragraph.

Apart from supporting file annotation, git also supports searching the
development history for when a code snippet occured in a change. This makes it
possible to track when a code snippet was added to a file, moved or copied
between files, and eventually deleted or replaced. It works by searching for
a text string in the diff. A small example:

-----------------------------------------------------------------------------
$ git log --pretty=oneline -S'blame_usage'
5040f17eba15504bad66b14a645bddd9b015ebb7 blame -S <ancestry-file>
ea4c7f9bf69e781dd0cd88d2bccb2bf5cc15c9a7 git-blame: Make the output
-----------------------------------------------------------------------------

OPTIONS
-------
-c, --compatibility::
	Use the same output mode as gitlink:git-annotate[1] (Default: off).

-l, --long::
	Show long rev (Default: off).

-t, --time::
	Show raw timestamp (Default: off).

-S, --rev-file <revs-file>::
	Use revs from revs-file instead of calling gitlink:git-rev-list[1].

-h, --help::
	Show help message.


SEE ALSO
--------
gitlink:git-annotate[1]

AUTHOR
------
Written by Fredrik Kuivinen <freku045@student.liu.se>.

GIT
---
Part of the gitlink:git[7] suite
